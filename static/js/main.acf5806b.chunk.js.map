{"version":3,"sources":["index.js"],"names":["layout","labelCol","span","wrapperCol","TextArea","Input","Demo","props","useState","state","openURL","keyword","console","log","url","a","document","createElement","href","evt","createEvent","initMouseEvent","window","dispatchEvent","openNewBackgroundTab","encodeURI","name","onFinish","values","keywords","split","step","count","undefined","index","i","length","style","width","offset","gutter","Item","label","rows","rules","type","min","max","defaultValue","htmlType","ReactDOM","render","getElementById"],"mappings":"8QAKA,MAAMA,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEdE,EAAaC,IAAbD,SAIP,IACE,IACE,IAOF,IAAgB,IACd,IASL,MAAME,EAAO,EAAEC,YAAY,MAAD,EACRC,mBAAS,IAAlBC,EADiB,oBAoBlBC,EAAUC,IACdC,QAAQC,IAAIF,GAId,SAA8BG,GAC5B,IAAIC,EAAIC,SAASC,cAAc,KAC/BF,EAAEG,KAAMJ,EACR,IAAIK,EAAMH,SAASI,YAAY,eAE/BD,EAAIE,eAAe,SAAS,GAAM,EAAMC,OAAQ,EAAG,EAAG,EAAG,EAAG,GAChC,GAAM,GAAO,GAAO,EAAO,EAAG,MAC1DP,EAAEQ,cAAcJ,GAThBK,CADU,mCAAmCC,UAAUd,KAazD,OAEE,kBAAC,IAAD,iBAAUX,EAAV,CAAkB0B,KAAK,gBAAgBC,SAlCxBC,IACfhB,QAAQC,IAAIe,GACZnB,EAAMoB,SAASD,EAAOC,SAASC,MAAM,MACrCrB,EAAMsB,KAAOH,EAAOI,WACHC,GAAbxB,EAAMyB,QACRzB,EAAMyB,OAAO,GAEf,IAAK,IAAIC,EAAE,EAAEA,EAAE1B,EAAMsB,KAAKI,GAAG,EAAE,CAE7B,GADA1B,EAAMyB,OAAO,EACTzB,EAAMyB,MAAMzB,EAAMoB,SAASO,OAC7B,OAEF1B,EAAQD,EAAMoB,SAASpB,EAAMyB,QAE/BtB,QAAQC,IAAKJ,IAoB6C4B,MAAO,CAACC,MAAM,OACtE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKpC,KAAO,EAAGqC,OAAQ,IAAvB,IAA4B,wCAE9B,kBAAC,IAAD,CAAKC,OAAQ,CAAC,EAAE,IAChB,kBAAC,IAAD,CAAKtC,KAAM,IAGX,kBAAC,IAAKuC,KAAN,CAAWf,KAAM,CAAC,YAAagB,MAAM,YACnC,kBAAC,IAAMtC,SAAP,CAAgBuC,KAAM,OAM5B,kBAAC,IAAD,CAAKzC,KAAM,IACP,kBAAC,IAAKuC,KAAN,CAAWf,KAAM,CAAC,SAAUgB,MAAM,QAAQE,MAAO,CAAC,CAAEC,KAAM,SAAUC,IAAK,EAAGC,IAAK,KAASC,aAAc,GACtG,kBAAC,IAAD,CAAcA,aAAc,KAG9B,kBAAC,IAAKP,KAAN,CAAWtC,WAAU,2BAAOH,EAAOG,YAAd,IAA0BoC,OAAQ,KACrD,kBAAC,IAAD,CAAQM,KAAK,UAAUI,SAAS,UAAhC,aAcRC,IAASC,OACP,kBAAC7C,EAAD,MACAU,SAASoC,eAAe,e","file":"static/js/main.acf5806b.chunk.js","sourcesContent":["import React,{ useState }  from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Row, Col,Space,Button,Input,InputNumber,Form } from 'antd';\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst { TextArea } = Input;\n\nvar panel= <div>\n\n<Row gutter={[8,8]} style={{width:640}}>\n  <Col span={12} >\n    <Space direction=\"vertical\">\n    <span>KeyWords</span>\n    <TextArea rows= {10}></TextArea>\n    </Space>\n \n  \n  </Col>\n  <Col span={12} ><Space direction=\"vertical\">\n    <InputNumber>Count</InputNumber>\n    </Space></Col>\n</Row>\n\n  \n</div>\n\nvar state ={}\n\nconst Demo = ({props}) => {\n  const [state] = useState({})\n\n  const onFinish = values => {\n    console.log(values);\n    state.keywords=values.keywords.split('\\n')\n    state.step = values.count\n    if (state.index==undefined){\n      state.index=-1\n    }\n    for (var i=0;i<state.step;i+=1){\n      state.index+=1\n      if (state.index>state.keywords.length){\n        return\n      }\n      openURL(state.keywords[state.index])\n    }\n    console.log( state);\n  };\n \n  const openURL =(keyword)=>{\n    console.log(keyword)\n    var url = \"https://www.google.com/search?q=\"+encodeURI(keyword)\n    openNewBackgroundTab(url)\n  }\n  function openNewBackgroundTab(url){\n    var a = document.createElement(\"a\");\n    a.href =url\n    var evt = document.createEvent(\"MouseEvents\");\n    //the tenth parameter of initMouseEvent sets ctrl key\n    evt.initMouseEvent(\"click\", true, true, window, 0, 0, 0, 0, 0,\n                                true, false, false, false, 0, null);\n    a.dispatchEvent(evt);\n}\n\n  return (\n   \n    <Form {...layout} name=\"nest-messages\" onFinish={onFinish}style={{width:640}} >\n      <Row  >\n        <Col span ={2} offset={12}> <h3>Search</h3></Col>\n      </Row>\n      <Row gutter={[8,8]} >\n      <Col span={12} >\n\n\n      <Form.Item name={['keywords']} label=\"keywords\">\n        <Input.TextArea rows={20} />\n      </Form.Item>\n   \n \n  \n  </Col>\n  <Col span={12}>\n      <Form.Item name={['count']} label=\"count\" rules={[{ type: 'number', min: 1, max: 50, }]}  defaultValue={5}>\n        <InputNumber  defaultValue={5}/>\n      </Form.Item>\n      \n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Open\n        </Button>\n      </Form.Item>\n\n      </Col>\n      </Row>\n    </Form>\n\n  \n\n  );\n};\n\nReactDOM.render(\n  <Demo/>,\n  document.getElementById('container'),\n);"],"sourceRoot":""}